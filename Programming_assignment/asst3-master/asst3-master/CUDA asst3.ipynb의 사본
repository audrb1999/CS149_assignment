{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1SDTdntMMtTGnUVtMCEOmmp7FfBvYZQIa","authorship_tag":"ABX9TyNcyVTHOc12GOhqIhSrq6P7"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["위에 수정을 클릭 후 노트 설정에서 GPU - T4 설정을 해줍니다, 그 이후 Google mount를 진행합니다.\n"],"metadata":{"id":"xXN2oPHDQDje"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rY_vgsb8PrVJ","executionInfo":{"status":"ok","timestamp":1689643450852,"user_tz":-540,"elapsed":6869,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"5f6a6d31-bb95-4a9d-8093-c80043774207"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting git+https://github.com/andreinechaev/nvcc4jupyter.git\n","  Cloning https://github.com/andreinechaev/nvcc4jupyter.git to /tmp/pip-req-build-ehhsq_1w\n","  Running command git clone --filter=blob:none --quiet https://github.com/andreinechaev/nvcc4jupyter.git /tmp/pip-req-build-ehhsq_1w\n","  Resolved https://github.com/andreinechaev/nvcc4jupyter.git to commit aac710a35f52bb78ab34d2e52517237941399eff\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: NVCCPlugin\n","  Building wheel for NVCCPlugin (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for NVCCPlugin: filename=NVCCPlugin-0.0.2-py3-none-any.whl size=4287 sha256=297775313e48ab44495295cd57a3dd91c7adefe7bee1b8e5a9d2878fd6d2d386\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-tllbwz61/wheels/a8/b9/18/23f8ef71ceb0f63297dd1903aedd067e6243a68ea756d6feea\n","Successfully built NVCCPlugin\n","Installing collected packages: NVCCPlugin\n","Successfully installed NVCCPlugin-0.0.2\n"]}],"source":["!pip install git+https://github.com/andreinechaev/nvcc4jupyter.git\n","# NVCC 플러그인 설치, C/C++을 사용하여 CUDA를 이용하기 때문에 필요합니다."]},{"cell_type":"code","source":["%load_ext nvcc_plugin\n","# 이후 nvcc 플러그인 load"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j3PmFlnvQMJP","executionInfo":{"status":"ok","timestamp":1689643455185,"user_tz":-540,"elapsed":6,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"ba281712-556c-4917-d6d4-dbc5b3fc9386"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["created output directory at /content/src\n","Out bin /content/result.out\n"]}]},{"cell_type":"code","source":["#test code입니다.\n","# %% 뒤에 파일 확장자를 써주면 됩니다.\n","\n","%%cu\n","#include <stdio.h>\n","\n","__global__ void hello(void){\n","    printf(\"hello CUDA %d!\\n\", threadIdx.x);\n","}\n","\n","int main(void){\n","    hello<<<1,8>>>();\n","#if defined(__linux__)\n","  cudaDeviceSynchronize();\n","#endif\n","    fflush(stdout);\n","    return 0;\n","}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1a1QUT7WQZcN","executionInfo":{"status":"ok","timestamp":1688675511806,"user_tz":-540,"elapsed":2108,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"c548981f-96ab-4e95-f28d-a91afa9f0944"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["hello CUDA 0!\n","hello CUDA 1!\n","hello CUDA 2!\n","hello CUDA 3!\n","hello CUDA 4!\n","hello CUDA 5!\n","hello CUDA 6!\n","hello CUDA 7!\n","\n"]}]},{"cell_type":"code","source":["# 드라이브와 연결하는 과정입니다.\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lj-SXuYGmUGb","executionInfo":{"status":"ok","timestamp":1689643618108,"user_tz":-540,"elapsed":15336,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"d34d781d-7e3d-4a1b-d9fd-b5dbf0a80454"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["## 1. SAXPY 기능 구현"],"metadata":{"id":"lj2mdEM5RVlF"}},{"cell_type":"code","source":["# g드라이브에 올려진 asst3 폴더 주소를 입력하여 해당 폴더로 이동합니다.\n","\n","%cd /saxpy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wfH6xBU8Q9It","executionInfo":{"status":"ok","timestamp":1689643672270,"user_tz":-540,"elapsed":410,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"cb4b91ee-9f96-4bbd-eac8-48bf59d0b631"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/대학원 관련/c언어/asst3-master/asst3-master/saxpy\n"]}]},{"cell_type":"code","source":["!dir"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k3DNDR5tRfZM","executionInfo":{"status":"ok","timestamp":1689426665934,"user_tz":-540,"elapsed":5,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"f8ae5c5e-741a-43e7-a4fa-4ca467fe0fa5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cudaSaxpy  CycleTimer.h  main.cpp  Makefile  objs  saxpy.cu\n"]}]},{"cell_type":"code","source":["!make\n","\n","# 동작 확인"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VgcyAwUPRjps","executionInfo":{"status":"ok","timestamp":1689643681141,"user_tz":-540,"elapsed":1303,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"342903ce-5e7b-48ce-860b-31f8a4f25a4c"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["mkdir -p objs/\n","g++ -m64 -O3 -Wall -o cudaSaxpy objs/main.o  objs/saxpy.o -L/usr/local/cuda/lib64/ -lcudart\n"]}]},{"cell_type":"code","source":["!dir\n","\n","# objs 폴더와 cudaSaxpy가 만들어짐"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T2xFR_UBRlPE","executionInfo":{"status":"ok","timestamp":1688669571712,"user_tz":-540,"elapsed":22,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"eed8a7e8-f7b2-4a4c-bf5d-38dde2d90389"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cudaSaxpy  CycleTimer.h  main.cpp  Makefile  objs  saxpy.cu\n"]}]},{"cell_type":"code","source":["!./cudaSaxpy\n","\n","# 전송 시간과 데이터를 옮기는 과정을 제외하고 시간을 측정합니다."],"metadata":{"id":"OxKW-QoAS8Uj","executionInfo":{"status":"ok","timestamp":1689643688101,"user_tz":-540,"elapsed":2545,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3e8fc4b3-961b-4112-8885-6654ccc9db13"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["mkdir -p objs/\n","g++ -m64 -O3 -Wall -o cudaSaxpy objs/main.o  objs/saxpy.o -L/usr/local/cuda/lib64/ -lcudart\n","---------------------------------------------------------\n","Found 1 CUDA devices\n","Device 0: Tesla T4\n","   SMs:        40\n","   Global mem: 15102 MB\n","   CUDA Cap:   7.5\n","---------------------------------------------------------\n","Running 3 timing tests:\n","Effective BW by CUDA saxpy: 4.704 ms\t\t[237.590 GB/s]\n","Effective BW by CUDA saxpy: 4.631 ms\t\t[241.325 GB/s]\n","Effective BW by CUDA saxpy: 4.634 ms\t\t[241.173 GB/s]\n"]}]},{"cell_type":"markdown","source":["## 2. Parallel Prefix-Sum 구현"],"metadata":{"id":"jTp2kqj1OskV"}},{"cell_type":"code","source":["# saxpy 폴더에서 scan 폴더로 이동하기 위해 상위 폴더로 이동합니다.\n","\n","%cd .."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3eVZE7UanPmS","executionInfo":{"status":"ok","timestamp":1689643720507,"user_tz":-540,"elapsed":276,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"21cedef7-587f-446c-f326-9b1de17d37c7"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/대학원 관련/c언어/asst3-master/asst3-master\n"]}]},{"cell_type":"code","source":["!dir"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SEClUZXpOxVh","executionInfo":{"status":"ok","timestamp":1689643762945,"user_tz":-540,"elapsed":280,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"42398fc4-b4b0-4d11-8eab-a122a6f584ff"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["cloud_readme.md\t\t   handout     README.md  saxpy\n","CUDA\\ asst3.ipynb의\\ 사본  install.sh  render\t  scan\n"]}]},{"cell_type":"code","source":["%cd scan/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TQSZYq11O0xM","executionInfo":{"status":"ok","timestamp":1689643782563,"user_tz":-540,"elapsed":5,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"07e5b152-af4b-4b14-b330-ec1efa5b313a"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/대학원 관련/c언어/asst3-master/asst3-master/scan\n"]}]},{"cell_type":"code","source":["!dir"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8V6BKxxcO7M8","executionInfo":{"status":"ok","timestamp":1689643788869,"user_tz":-540,"elapsed":265,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"00fb4552-ba20-423a-c375-fadfdef9e739"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["checker.pl  cudaScan_ref  main.cpp  objs\n","cudaScan    CycleTimer.h  Makefile  scan.cu\n"]}]},{"cell_type":"code","source":["!make"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p75ZNYbBO8eE","executionInfo":{"status":"ok","timestamp":1689643792573,"user_tz":-540,"elapsed":1434,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"04223350-8daf-451d-a71e-397db61d75c1"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["mkdir -p objs/\n","g++ -m64 -O3 -Wall -o cudaScan objs/main.o  objs/scan.o -L/usr/local/cuda/lib64/ -lcudart\n"]}]},{"cell_type":"code","source":["!dir"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VIy0curCQv0S","executionInfo":{"status":"ok","timestamp":1689624199975,"user_tz":-540,"elapsed":4,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"684a3a84-cd05-4bf5-9c0b-66c87a774d3b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["checker.pl  cudaScan_ref  main.cpp  objs\n","cudaScan    CycleTimer.h  Makefile  scan.cu\n"]}]},{"cell_type":"code","source":["!./cudaScan"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V-ppbUG4cfmT","executionInfo":{"status":"ok","timestamp":1689643799560,"user_tz":-540,"elapsed":677,"user":{"displayName":"MG Park","userId":"09539786048286271284"}},"outputId":"fdded66e-ef77-450d-dd72-ae12a6012d53"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["---------------------------------------------------------\n","Found 1 CUDA devices\n","Device 0: Tesla T4\n","   SMs:        40\n","   Global mem: 15102 MB\n","   CUDA Cap:   7.5\n","---------------------------------------------------------\n","Array size: 64\n","Student GPU time: 0.250 ms\n","Scan outputs are correct!\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"BYJ70iFAdAFT"},"execution_count":null,"outputs":[]}]}